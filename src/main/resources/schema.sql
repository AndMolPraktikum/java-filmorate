CREATE TABLE IF NOT EXISTS mpas (
	mpa_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(10) UNIQUE NOT NULL
);
CREATE TABLE IF NOT EXISTS genres (
	genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar(50) UNIQUE NOT NULL
);
CREATE TABLE IF NOT EXISTS films (
    film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(50) NOT NULL,
    description varchar(200) NOT NULL,
    release_year DATE NOT NULL,
    rate integer NOT NULL,
    duration integer NOT NULL,
    mpa_id integer NOT NULL,
    CONSTRAINT films_fk FOREIGN KEY (mpa_id) REFERENCES mpas (mpa_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS film_genres (
	fg_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_id INTEGER NOT NULL,
	genre_id varchar(50) NOT NULL,
	CONSTRAINT film_genres_fk FOREIGN KEY (film_id) REFERENCES films (film_id) ON DELETE CASCADE,
	CONSTRAINT film_genres_fk1 FOREIGN KEY (genre_id) REFERENCES genres (genre_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS users (
	user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email varchar(50) NOT NULL,
	login varchar(50) NOT NULL,
	name varchar(50) NOT NULL,
	birthday DATE NOT NULL
);
CREATE TABLE IF NOT EXISTS likes (
	like_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	film_id INTEGER NOT NULL,
	user_id INTEGER NOT NULL,
	grade INTEGER NOT NULL,
	CONSTRAINT likes_fk FOREIGN KEY (film_id) REFERENCES films (film_id) ON DELETE CASCADE,
	CONSTRAINT likes_fk1 FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
	CONSTRAINT likes_unique UNIQUE (film_id, user_id)
);
CREATE TABLE IF NOT EXISTS friends (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL,
    friend_id INTEGER NOT NULL,
    CONSTRAINT friends_fk1 FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT friends_fk2 FOREIGN KEY (friend_id) REFERENCES users (user_id) ON DELETE CASCADE,
    CONSTRAINT friends_unique UNIQUE (user_id, friend_id)
);





